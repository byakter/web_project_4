!function(){"use strict";function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class t{constructor(t,r,s){let{name:i,link:n}=t;e(this,"_handleLikeButton",(e=>{e.target.classList.toggle("cards__button-like_active")})),e(this,"_setEventListeners",(()=>{const e=this._cardElement.querySelector(".cards__button-like"),t=this._cardElement.querySelector(".cards__button-trash"),r=this._cardElement.querySelector(".cards__image");r.style.backgroundImage=`url(${this._link})`,this._cardElement.querySelector(".cards__title").textContent=this._name,e.addEventListener("click",this._handleLikeButton),t.addEventListener("click",(function(e){e.target.closest(".cards__card").remove()})),r.addEventListener("click",(()=>{this._handlerCardClick(this._name,this._link)}))})),e(this,"generateCard",(()=>(this._cardElement=this._cardTemplate.cloneNode(!0),this._setEventListeners(),this._cardElement))),this._name=i,this._link=n,this._templateCardSelector=r,this._handlerCardClick=s,this._cardTemplate=document.querySelector(r).content.querySelector(".cards__card")}}function r(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var s=class{constructor(e,t){r(this,"_showInputError",((e,t)=>{const{inputErrorClass:r,errorClass:s}=this.settings,i=this.formElement.querySelector(`#${e.id}-error`);i.textContent=t,i.classList.add(s),e.classList.add(r)})),r(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:r}=this.settings,s=this.formElement.querySelector(`#${e.id}-error`);s.textContent="",s.classList.remove(r),e.classList.remove(t)})),r(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),r(this,"_setEventListeners",(()=>{const{inputSelector:e}=this.settings;this.inputList=[...this.formElement.querySelectorAll(e)],this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))})),r(this,"_isValid",(()=>this.inputList.every((e=>e.validity.valid)))),r(this,"_toggleButtonState",(()=>{const{inactiveButtonClass:e,submitButtonSelector:t}=this.settings,r=this.formElement.querySelector(t);this._isValid()?(r.disabled=!1,r.classList.remove(e)):(r.disabled="disabled",r.classList.add(e))})),this.settings=e,this.formElement=t}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this.formElement.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners(this.settings,this.formElement)}};class i{constructor(e){this._popup=document.querySelector(e),this.close=this.close.bind(this),this.closeByEscape=this.closeByEscape.bind(this),this._link=""}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this.closeByEscape)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this.closeByEscape)}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}closeByEscape(e){"Escape"===e.key&&this.close()}}class n extends i{constructor(e,t){super(e),this._submithandler=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submithandler(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._form.reset(),super.close()}}class o{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}render(){this._items.forEach((e=>{this._renderer(e)}))}appendItem(e){this._container.append(e)}}const a={inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},l=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>console.log(e))),c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getInitialCards(){return l(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return l(`${this._baseUrl}/users/me`,{headers:this._headers})}createCard(e){return l(`${this._baseUrl}/cards`,{headers:this._headers,method:"POST",body:JSON.stringify({name:e["place-name"],link:e.link})})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"5dce2cef-3614-4677-836d-e6e3b236af3f","Content-Type":"application/json"}});function p(e){return new t(e,".card-template",S).generateCard()}c.getInitialCards().then((e=>{const t=new o({items:e,renderer:e=>{t.appendItem(p(e))}},".cards");t.render()})),c.getUserInfo().then((e=>{u.setUserInfo(e)}));const u=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:r}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,about:r}=e;this._profileName.textContent=t,this._profileJob.textContent=r}}({profileNameSelector:".profile__title",profileJobSelector:".profile__subtitle"}),d=new class extends i{open(e,t){const r=this._popup.querySelector(".popup__preview-title"),s=this._popup.querySelector(".popup__preview-image");r.textContent=e,s.src=t,s.alt="Image of selected tile",this._link=t,super.open()}}(".popup_type_preview");d.setEventListeners();const _=new n(".popup_type_profile",(e=>u.setUserInfo(e)));_.setEventListeners();const h=new n(".popup_type_card",(e=>{c.createCard(e).then((e=>{const t=new o({items:[],renderer:e=>{t.appendItem(p(e))}},".cards"),r=p(e);t.addItem(r),t.render()}))}));h.setEventListeners();const m=document.querySelector(".popup__form_type_profile"),f=document.querySelector(".popup__form_type_card"),v=new s(a,m),y=new s(a,f);v.enableValidation(),y.enableValidation();const b=document.querySelector(".profile__edit-button"),E=document.querySelector(".popup__input_type_name"),g=document.querySelector(".popup__input_type_profession");function S(e,t){d.open(e,t)}b.addEventListener("click",(function(){const e=u.getUserInfo();_.open(),v.resetValidation(),E.value=e.name,g.value=e.job})),document.querySelector(".profile__button").addEventListener("click",(function(){h.open(),y.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,